@model int

<h2>How many books do you want to have?</h2>
<p>There are currenty @Model.ToString("##,###") in the database.</p>

<div class="form-horizontal">
    <form asp-controller="Generate" asp-action="Books" method="post" id="input-form">
        <!-- Input and Submit elements -->

        <div class="form-group">
            <div class="col-sm-2">
                <label class="control-label">Num Books to generate</label>
            </div>
            <div class="col-sm-10">
                <input name="numBooks" value="10000" class="form-control col-sm-10" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" onclick="startGenerate()">Generate</button>
                <button onclick="cancelGenerate()">Cancel</button>
            </div>
        </div>

    </form>
</div>

<div class="progress">
    <div class="progress-bar hidden" role="progressbar" aria-valuenow="0"
         aria-valuemin="0" aria-valuemax="100" style="width:70%">
    </div>
</div> 

<script>
    function startGenerate() {
        var form = $('#input-form');

        startUpdatingProgressIndicator();
        $.ajax(
            {
                url: form.attr('action'),
                data: new FormData(form[0]),
                //processData: false,
                //contentType: false,
                type: "POST",
                success: function (data) {
                    stopUpdatingProgressIndicator();
                }
            }
        );
    }

    var cancelFlag = false;

    function cancelGenerate() {
        cancelFlag = true;
    }


    var intervalId;

    function startUpdatingProgressIndicator() {
        var $progress = $(".progress-bar");
        $progress.removeClass('hidden');


        var skipFirst = true;
        intervalId = setInterval(
            function () {
                // We use the POST requests here to avoid caching problems (we could use the GET requests and disable the cache instead)
                $.post(
                    '@Url.Action("Progress")',
                    {cancel: cancelFlag},
                    function (progress) {
                        if (skipFirst) {
                            skipFirst = false;
                            return;
                        }
                        $progress.css('width', progress + '%').attr('aria-valuenow', progress);
                    }
                );
            },
            100
        );
    }

    function stopUpdatingProgressIndicator() {
        clearInterval(intervalId);
    }
</script>